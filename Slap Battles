--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\66\122\104\72\48\120\99\109\47\121\67\104\83\108\108\78\85\86\89\76\51\106\101\66\70\70\87\88\68\84\52\102\79\80\48\118\71\109\110\71\88\85\122\47\87\103\50\109\121\52\102\86\51\82\54\112\84\101\73\53\85\48\47\81\104\57\122\90\97\77\122\43\80\72\72\79\53\99\77\70\111\55\109\119\88\104\43\53\65\47\50\104\69\108\73\79\67\71\51\112\68\80\103\120\76\55\83\78\97\106\111\67\50\43\70\109\74\114\122\70\43\67\79\78\73\80\103\101\84\90\89\75\43\121\71\99\113\49\99\104\112\120\53\122\85\73\76\90\99\122\115\112\119\87\108\71\75\89\121\75\66\89\77\74\111\90\111\113\71\48\109\99\75\77\82\113\99\57\77\71\107\51\87\88\56\108\121\53\120\66\104\97\73\52\119\48\47\117\103\67\77\115\105\55\104\68\85\117\70\99\121\108\57\49\52\121\112\75\101\99\115\121\79\67\104\100\70\112\81\102\43\120\99\86\100\120\81\74\78\107\108\117\79\55\103\80\112\66\57\52\107\55\69\68\120\80\114\121\109\88\97\83\79\65\71\99\122\83\119\77\49\57\111\109\66\118\86\118\48\109\115\117\84\50\67\102\108\86\78\118\109\74\49\97\56\47\106\101\84\79\116\101\51\81\115\80\71\69\108\98\120\73\103\51\105\107\90\48\118\110\98\97\47\115\54\79\87\103\75\97\79\71\109\49\90\78\83\55\80\54\55\114\77\115\83\78\108\76\49\88\117\98\85\119\50\89\52\100\76\118\116\113\117\48\121\118\47\49\110\101\47\103\121\51\70\113\98\118\49\71\56\106\105\115\80\85\102\43\50\116\101\69\47\69\104\51\87\89\118\110\68\108\72\114\87\116\43\97\55\75\107\90\104\120\114\117\53\121\79\48\118\55\89\117\72\69\109\85\69\86\97\103\48\80\116\69\76\50\50\77\121\43\68\53\118\67\104\118\55\75\112\108\88\53\118\106\109\88\83\74\112\48\79\117\79\78\119\104\54\73\113\82\83\48\56\114\76\57\88\116\66\75\99\118\65\88\67\69\111\54\78\73\82\53\87\48\98\47\66\74\113\74\101\73\108\89\119\71\104\47\54\121\106\105\71\81\81\102\103\69\74\107\112\52\99\73\66\71\50\53\106\54\55\101\47\112\76\52\122\114\76\117\117\84\75\106\78\103\43\71\76\116\52\82\49\100\88\113\103\89\114\117\51\120\87\111\121\104\112\120\57\76\112\111\103\74\43\89\110\103\88\53\75\98\83\81\79\116\80\88\90\113\115\69\82\111\67\111\78\112\109\103\80\117\108\49\102\78\90\117\50\108\57\98\89\121\115\74\111\120\47\75\90\70\55\84\74\118\69\57\120\90\115\79\86\119\51\48\47\88\78\106\83\111\117\90\122\111\80\98\107\53\103\109\104\67\122\43\99\119\103\57\47\51\56\53\110\77\86\52\87\113\102\98\76\80\68\100\82\65\106\52\47\114\121\52\73\65\71\52\106\47\116\120\116\122\104\66\118\83\101\50\79\76\102\115\80\71\104\97\47\86\56\89\87\103\68\75\113\67\108\100\51\65\49\80\101\89\109\119\56\113\47\99\104\97\70\87\101\106\90\73\90\51\70\74\116\74\116\100\43\81\51\74\104\85\111\86\68\108\76\111\111\120\55\117\79\75\86\87\72\49\89\71\90\49\106\116\57\55\115\111\117\72\113\112\120\77\119\43\50\67\99\48\70\111\48\75\113\65\83\77\110\106\98\100\99\69\74\102\87\88\117\71\84\97\114\101\50\48\82\49\105\77\68\65\55\82\51\86\108\52\112\103\74\86\83\111\48\51\110\122\109\78\82\107\114\57\118\66\52\98\73\72\47\103\116\100\106\80\113\72\83\120\120\68\120\108\116\52\65\102\109\119\88\55\115\82\116\67\89\57\117\80\52\54\48\98\121\47\115\110\75\111\99\118\43\52\47\82\67\99\49\112\117\78\65\74\99\78\83\55\122\78\90\53\86\69\117\56\97\88\54\51\56\102\120\67\104\71\54\104\121\109\86\68\100\100\115\118\108\113\57\101\120\53\115\101\107\47\115\50\74\65\47\102\103\84\86\72\112\51\48\73\86\85\43\80\90\99\103\56\73\100\111\113\43\68\83\54\75\74\112\65\88\112\53\81\54\117\85\83\56\48\117\75\115\78\50\97\104\121\71\97\78\107\70\108\47\69\84\101\69\82\75\71\75\47\111\89\83\76\49\67\88\83\77\87\83\79\112\51\82\86\99\100\85\48\102\69\104\76\114\79\104\82\70\48\105\47\65\114\70\73\111\90\73\103\88\105\98\56\47\103\108\47\85\120\47\84\70\87\79\122\86\88\112\55\88\53\100\104\86\80\121\105\120\105\101\102\82\86\67\51\50\102\66\100\120\67\47\48\67\75\66\80\101\76\107\106\79\47\98\90\122\88\85\97\90\74\99\81\65\57\118\90\98\100\113\119\71\86\122\48\56\49\51\101\84\51\103\122\109\81\99\118\120\82\90\68\82\80\57\102\65\113\121\90\84\104\101\79\75\89\90\110\88\75\121\106\118\74\98\66\57\74\104\72\51\54\86\117\55\74\70\53\49\65\105\87\104\89\57\81\49\51\53\83\104\65\54\56\103\52\72\119\53\71\57\79\110\69\54\105\117\47\89\76\98\86\114\56\69\90\121\101\111\89\86\89\120\53\104\103\119\53\49\108\79\67\49\78\106\83\66\106\117\118\107\56\73\116\75\79\85\86\113\103\116\107\54\86\88\115\120\118\54\74\87\84\109\81\85\69\84\87\100\118\78\103\83\77\57\90\75\66\90\74\51\108\85\71\118\117\106\82\85\77\81\86\48\74\87\70\57\121\115\48\116\99\48\86\74\72\120\104\111\90\56\74\86\119\86\69\77\102\116\71\80\112\111\55\106\57\109\116\72\65\71\50\74\89\75\98\110\101\83\65\73\98\104\112\81\84\49\103\105\71\48\119\80\103\56\81\83\67\117\51\84\56\77\51\108\97\70\54\107\65\111\103\109\52\98\90\101\107\55\99\53\98\74\68\121\118\111\90\70\67\54\101\99\118\98\68\56\102\86\73\103\53\107\76\52\81\67\76\52\82\115\109\110\51\113\68\82\81\55\117\85\54\114\56\107\107\52\69\101\81\75\113\114\83\71\84\43\70\73\81\102\75\68\113\76\117\83\52\116\113\57\84\111\82\87\80\90\82\52\66\88\106\43\52\104\117\51\119\116\109\84\119\50\84\116\47\51\73\118\90\89\85\75\113\72\81\51\122\79\73\106\68\68\73\72\70\87\49\120\81\76\99\53\47\66\98\99\72\80\65\79\116\98\82\55\74\67\99\117\76\114\68\68\98\97\120\75\73\99\103\55\48\121\98\54\109\86\100\79\47\117\69\75\69\82\111\72\117\78\69\78\109\106\87\86\74\113\71\57\114\74\53\47\79\116\107\109\71\68\112\87\114\90\104\87\73\79\70\56\86\108\103\76\73\75\86\83\74\66\75\90\56\98\86\52\117\87\90\119\108\75\90\71\107\97\108\84\113\83\66\54\122\114\66\82\87\110\100\90\49\49\43\43\86\72\108\105\84\106\113\101\68\57\84\117\90\70\55\74\43\78\102\83\87\47\113\100\111\97\77\112\54\54\83\48\53\116\107\77\66\102\89\115\85\75\120\108\56\57\65\48\83\111\104\87\102\67\120\76\105\115\87\90\55\84\98\86\57\69\88\100\75\97\99\86\101\54\52\113\87\79\71\97\67\121\69\98\51\102\101\51\48\116\81\109\88\68\120\101\115\47\89\115\55\86\48\74\103\90\79\112\120\71\49\114\54\79\52\121\104\81\117\113\90\67\73\117\79\101\67\119\69\54\105\112\119\106\43\122\73\120\113\78\77\109\66\79\107\90\47\115\90\51\53\69\80\74\121\114\112\83\115\116\73\48\80\52\51\105\75\121\52\68\108\43\112\54\49\80\108\113\43\103\122\105\78\56\111\105\74\87\113\100\70\111\85\66\43\80\110\75\55\72\84\43\80\51\57\81\111\87\106\57\68\57\99\112\48\106\110\81\117\116\82\49\79\117\99\117\90\86\54\102\118\54\82\118\103\112\85\82\65\100\118\106\77\102\102\71\100\97\89\103\104\80\88\114\82\51\100\90\73\81\121\68\87\55\109\115\118\112\111\65\108\74\72\47\111\52\71\106\56\119\52\81\57\112\74\65\99\103\80\78\106\56\109\110\54\109\110\113\82\100\66\117\69\51\89\85\85\56\85\52\108\105\53\102\109\68\100\55\99\79\48\53\84\55\106\120\74\74\74\111\48\49\112\119\111\80\53\74\108\103\48\110\79\113\113\112\77\116\73\115\89\55\69\67\57\52\79\57\86\114\88\75\53\109\87\86\118\82\103\55\56\113\72\111\43\67\56\101\109\49\102\73\109\79\83\120\52\112\74\90\68\106\81\102\112\67\67\48\114\81\70\49\120\55\43\120\78\121\78\43\85\68\70\114\101\112\122\116\101\85\103\77\82\51\108\119\76\70\108\79\98\43\55\75\74\47\118\106\83\122\116\117\119\67\90\99\66\78\48\87\112\86\107\52\86\87\53\87\98\103\116\102\113\100\90\99\80\81\87\85\102\43\67\57\110\77\73\107\111\103\54\81\53\69\88\114\103\65\117\85\105\78\120\97\86\66\90\118\84\110\112\84\102\65\87\54\107\47\101\48\100\100\88\68\76\75\105\82\116\82\98\68\69\112\86\107\99\81\88\54\115\47\53\85\99\110\122\82\87\114\67\81\121\103\54\120\115\84\101\80\79\108\70\119\80\105\66\117\108\83\51\98\75\98\68\78\53\103\54\50\99\107\87\49\100\115\109\116\76\56\82\86\97\101\109\78\68\121\43\80\116\106\43\103\122\87\105\85\100\86\88\82\53\114\55\110\47\55\98\118\73\70\56\81\48\120\112\54\53\65\72\50\106\72\100\71\49\108\115\86\108\107\51\114\51\86\122\88\78\117\100\87\51\90\48\72\117\86\111\69\114\83\89\78\65\110\82\104\43\98\80\121\77\121\67\52\85\56\117\108\57\90\90\100\102\48\73\48\122\67\104\103\50\110\85\73\71\76\105\85\119\82\115\71\78\48\53\69\52\70\43\76\114\90\119\53\90\116\84\73\72\108\69\79\119\106\78\112\117\111\55\104\84\115\103\111\55\85\100\88\109\67\80\107\117\86\71\110\65\68\117\113\75\67\122\108\122\48\43\84\56\83\43\47\67\72\79\121\53\76\109\48\121\118\90\66\99\97\98\69\81\87\84\119\111\119\77\119\54\114\79\47\116\49\89\90\110\122\88\102\115\82\120\118\120\68\88\81\54\71\48\88\110\77\85\111\47\78\90\116\68\65\56\88\72\113\107\77\67\86\106\67\53\117\111\66\76\48\111\72\107\118\76\72\70\109\97\49\86\86\120\48\113\65\75\111\120\68\109\73\122\112\122\104\53\77\74\114\114\56\55\112\110\86\119\107\121\74\82\69\66\114\121\84\52\118\84\112\109\103\115\51\112\112\43\104\75\109\78\83\88\82\109\73\105\121\83\100\89\122\78\107\56\55\56\50\101\52\114\111\119\50\107\66\99\113\43\102\100\49\86\90\86\115\117\103\76\116\90\109\87\110\47\65\81\119\120\55\98\82\77\89\110\116\87\88\47\55\119\50\84\72\83\108\105\88\98\53\73\121\115\72\107\121\121\69\80\79\118\98\69\48\65\111\68\79\70\70\65\81\122\101\98\86\97\115\119\101\84\76\106\107\106\51\74\84\72\79\77\82\68\82\87\84\49\76\50\72\47\119\71\87\121\57\121\113\79\80\99\81\110\81\122\57\67\116\71\73\56\54\81\47\105\81\103\111\122\67\100\97\89\87\88\102\108\88\56\116\55\117\71\77\111\51\100\47\100\118\110\80\67\75\85\76\78\65\104\85\54\48\114\106\111\53\53\76\100\81\67\120\67\102\102\112\105\120\119\66\100\65\84\76\75\84\74\112\90\118\57\103\110\109\76\77\111\118\52\120\47\57\90\77\120\99\110\115\89\116\110\65\57\114\75\106\50\71\104\115\82\57\90\73\76\100\102\53\69\84\68\79\74\55\112\84\121\100\121\111\70\69\113\114\66\43\90\73\69\100\103\104\112\97\103\114\90\120\115\100\52\53\111\119\101\82\72\103\57\72\56\75\118\69\82\48\73\52\72\97\66\111\121\102\100\69\113\51\113\49\100\104\118\106\111\114\55\113\77\71\84\110\113\54\57\100\56\73\105\105\90\69\68\100\77\88\71\57\101\110\102\111\119\107\119\50\66\47\121\54\86\78\57\85\54\67\121\69\84\54\115\108\101\99\49\121\73\120\66\69\120\47\110\117\80\100\53\100\55\75\51\67\98\70\102\86\78\79\107\104\122\101\79\121\116\82\114\73\70\73\71\104\75\69\84\120\101\65\87\104\77\56\118\71\120\55\69\98\110\66\49\85\76\101\90\90\120\101\78\90\70\84\110\119\67\87\117\112\66\56\106\75\87\97\72\72\56\107\110\111\43\73\89\112\78\81\80\51\97\109\98\70\67\117\111\121\68\90\107\103\113\71\116\81\80\65\73\82\81\118\65\103\90\89\89\55\66\121\70\88\67\108\43\65\57\117\88\119\121\52\80\100\104\99\75\108\104\76\87\57\71\90\55\57\67\89\55\118\66\56\116\70\50\52\69\103\98\116\88\88\82\76\108\43\110\102\78\73\106\81\117\113\53\76\48\65\106\49\70\83\86\43\88\82\51\113\73\110\52\71\104\97\53\67\122\72\43\83\56\54\98\48\105\113\100\102\74\73\65\109\115\118\120\100\52\108\73\90\53\70\52\103\54\85\84\69\82\55\71\119\103\112\78\116\110\78\43\78\77\81\52\54\118\120\71\65\81\65\57\85\55\76\99\47\119\52\83\55\54\100\107\83\76\50\118\112\120\76\69\113\79\115\86\89\83\108\85\52\78\73\87\103\99\43\117\85\70\118\83\57\89\74\115\109\122\101\90\117\57\70\102\88\89\49\107\100\119\79\77\121\49\113\100\43\110\43\121\85\105\116\122\68\83\67\86\107\71\105\116\103\98\109\97\113\90\75\99\74\88\116\100\80\105\75\85\122\112\69\108\73\83\56\121\53\69\67\113\84\107\47\115\85\81\111\101\66\122\66\110\111\69\66\119\88\90\69\114\110\103\50\90\84\56\98\112\121\99\81\98\101\50\89\79\73\78\98\76\99\53\49\75\100\108\51\55\65\119\57\101\54\69\118\97\49\71\65\81\78\66\115\121\105\90\78\122\55\100\74\88\105\67\85\98\85\69\116\103\76\117\71\43\80\97\104\86\56\97\85\74\82\108\86\103\51\53\70\65\88\89\80\110\87\122\87\101\86\107\67\54\102\78\69\84\67\104\85\109\47\87\118\55\72\103\78\102\114\98\54\83\122\76\53\97\90\55\81\57\51\74\75\118\117\88\83\105\115\81\117\80\115\72\114\120\70\103\77\82\73\53\87\97\114\85\55\122\84\84\75\99\105\99\86\54\102\70\110\82\112\67\88\81\80\90\53\120\81\121\101\88\116\84\51\80\118\47\72\110\71\43\79\78\49\56\81\47\77\55\88\109\108\83\69\89\73\78\97\52\72\50\108\98\78\115\86\65\104\88\110\117\75\98\56\99\48\74\102\105\48\122\83\89\105\84\55\103\71\118\115\89\72\107\53\43\116\77\57\105\116\100\78\105\52\87\80\105\73\104\99\43\82\74\120\83\75\69\103\76\55\104\74\86\84\90\74\88\78\70\82\122\83\50\57\97\117\75\52\87\118\99\110\79\102\84\57\49\74\68\117\70\79\113\88\117\79\107\88\53\86\47\66\57\117\114\104\76\115\109\73\82\122\50\53\66\55\101\81\98\86\51\89\119\97\87\50\56\78\101\108\68\120\117\52\48\107\80\83\47\79\105\78\116\82\115\107\117\73\86\67\121\106\100\88\89\56\54\84\70\85\115\52\82\119\121\112\77\76\103\82\114\68\84\84\114\121\70\104\80\50\57\117\89\71\47\104\74\71\73\83\81\101\65\81\98\50\116\82\98\106\88\98\53\77\85\106\49\48\50\98\47\102\57\100\109\53\104\120\119\76\113\79\65\116\54\120\69\121\113\69\69\76\116\56\85\87\105\80\82\56\119\113\98\47\81\75\80\69\121\109\82\100\83\52\118\87\69\112\122\53\49\65\78\76\97\114\105\82\111\65\104\83\118\70\89\73\65\88\102\116\109\73\47\72\43\52\82\69\74\56\72\69\87\122\76\116\56\99\110\116\122\52\111\66\49\104\121\49\86\80\50\103\99\48\110\75\67\107\89\57\82\82\81\80\56\90\78\69\74\68\84\47\90\109\75\55\53\120\103\69\118\119\54\116\79\50\111\83\101\100\87\81\121\111\76\99\51\107\68\53\104\55\107\50\109\78\114\78\50\51\103\102\88\97\76\50\86\84\47\56\67\106\118\57\121\74\71\107\75\118\81\106\90\86\117\108\66\68\69\113\80\121\119\67\84\97\48\52\116\69\54\89\104\69\90\56\53\84\76\49\74\106\74\70\74\98\98\109\87\102\121\51\83\50\80\108\101\76\57\67\52\113\110\107\109\43\113\72\111\112\103\118\71\75\85\114\107\115\43\121\76\71\68\71\99\83\49\72\119\117\119\74\103\79\87\47\49\122\121\50\118\120\70\121\52\54\75\55\103\56\86\88\47\97\119\121\117\70\57\114\84\75\102\77\47\52\54\88\71\71\56\82\47\109\77\79\87\72\112\117\114\114\76\110\89\76\80\120\85\57\83\90\53\101\105\55\114\70\98\72\82\117\102\104\70\112\73\86\43\117\84\106\104\57\84\115\99\108\117\101\83\53\100\47\50\83\106\89\120\88\118\87\52\111\106\117\85\106\65\68\71\77\90\83\49\115\107\113\118\65\48\56\89\102\55\108\56\49\65\108\103\49\106\82\87\43\121\56\55\101\105\87\67\101\48\105\65\85\101\67\52\119\110\115\121\101\55\69\115\116\70\81\113\115\101\69\112\68\108\121\81\68\100\120\98\117\118\72\111\105\113\86\48\104\79\77\51\52\43\51\101\57\109\67\76\97\47\106\116\68\77\68\88\107\72\48\80\53\56\118\76\70\90\43\53\100\107\79\90\86\102\48\110\48\76\70\57\86\106\99\115\49\43\98\74\43\85\78\90\117\57\102\71\107\86\90\107\53\120\111\97\107\121\43\118\65\84\118\77\112\55\105\103\43\90\48\69\55\121\106\65\80\77\88\107\81\104\113\103\85\79\77\90\99\97\84\103\49\118\113\109\77\114\71\72\97\52\83\98\112\74\111\98\68\77\108\115\117\97\110\79\85\87\119\88\56\101\111\56\98\82\76\90\53\86\76\57\121\77\74\116\117\55\104\107\82\109\73\98\115\56\82\47\87\110\108\50\56\56\97\43\105\99\54\73\119\78\122\67\72\88\57\48\115\67\68\69\54\49\72\105\80\108\54\52\84\110\71\98\80\70\86\48\97\122\109\110\65\114\55\82\83\53\114\57\114\98\109\56\107\72\112\57\107\99\103\77\78\108\49\85\122\52\111\75\79\65\73\73\119\107\54\112\105\68\83\78\114\68\67\70\107\121\80\104\120\97\73\109\115\101\104\54\55\80\121\89\57\81\105\87\108\66\49\67\102\88\108\105\97\104\73\88\70\53\51\89\118\54\55\75\109\98\101\108\47\83\89\51\55\82\54\54\69\67\48\86\48\97\76\78\69\86\70\98\90\118\82\74\103\52\87\88\115\83\51\104\52\119\88\106\73\83\99\69\51\113\73\71\71\110\105\74\105\85\90\112\69\72\70\56\115\56\115\80\75\102\110\122\98\114\43\84\82\119\47\73\98\99\102\98\56\89\67\121\115\76\67\119\97\113\77\109\55\114\76\82\53\103\83\89\108\81\85\66\76\106\82\103\121\47\65\43\108\78\69\99\121\107\56\49\87\90\100\83\75\50\116\110\71\89\87\54\47\51\84\57\65\114\75\54\79\77\55\110\77\66\103\84\57\88\112\50\88\68\112\54\56\80\111\114\65\82\67\49\104\121\89\97\88\111\52\68\68\110\110\54\65\113\115\54\66\122\82\86\112\53\88\72\116\81\114\110\111\76\87\57\77\80\120\90\110\85\97\121\119\112\57\107\53\85\50\77\114\109\66\68\85\65\76\82\48\114\57\90\65\102\51\97\119\51\82\120\55\113\74\121\82\68\103\108\109\103\67\119\97\50\47\84\103\105\108\48\88\97\85\86\108\52\50\88\69\118\115\69\51\101\99\49\69\119\82\120\99\48\77\54\115\71\50\117\122\83\70\87\118\120\113\68\71\73\71\49\84\57\43\119\48\108\65\50\84\100\74\83\78\108\68\116\43\104\68\108\122\109\107\82\109\77\53\83\87\69\100\47\56\84\117\50\117\67\86\119\102\99\57\53\108\99\107\52\49\90\54\57\73\122\90\65\100\82\74\69\89\105\53\76\47\90\82\83\99\114\85\111\110\89\120\43\90\114\75\115\106\97\121\102\84\77\81\97\50\72\121\77\118\53\88\120\113\120\51\43\80\108\116\103\112\110\67\52\84\78\48\72\85\108\85\48\111\98\80\97\109\99\120\108\67\83\77\66\118\48\83\119\43\52\47\72\97\97\55\67\72\99\103\105\67\79\78\115\107\76\104\49\115\47\71\97\87\72\103\68\67\106\67\54\53\72\112\119\103\98\114\109\101\104\70\56\75\118\106\56\102\52\57\49\99\55\71\106\101\85\108\74\113\90\109\81\111\50\70\109\69\104\115\66\107\68\86\43\111\68\86\83\119\115\55\119\54\49\109\115\117\88\106\72\43\84\97\52\76\51\65\88\76\105\115\89\97\89\103\98\112\78\68\98\112\87\75\54\115\69\57\70\110\86\49\78\104\72\90\121\55\47\66\102\116\119\116\49\122\76\55\66\70\86\82\101\87\68\71\84\117\56\108\51\55\78\113\78\56\47\77\79\71\69\76\68\119\75\67\90\117\70\75\69\71\79\111\80\69\54\108\119\83\70\72\81\52\69\112\70\75\85\70\90\51\122\65\108\50\54\98\81\52\66\77\107\99\66\50\80\90\120\103\110\73\84\98\106\56\107\79\100\104\82\115\108\53\103\84\99\117\114\103\118\81\55\108\57\90\83\89\83\72\88\89\111\52\82\55\75\78\73\104\110\118\67\119\103\52\120\53\116\65\110\87\72\99\84\65\70\120\66\103\43\81\55\98\56\68\97\52\72\99\122\99\99\110\54\71\50\84\71\86\103\50\97\114\104\106\107\111\51\108\85\70\56\70\113\72\100\117\98\84\54\117\118\51\101\49\50\117\50\55\55\49\55\120\122\81\102\90\101\47\109\119\104\52\100\69\106\67\101\82\115\43\77\106\103\113\69\83\49\73\66\114\120\79\98\56\99\101\53\75\100\103\66\69\78\112\65\76\55\48\47\102\99\115\50\53\117\109\100\115\57\53\83\117\43\110\52\120\47\85\106\57\117\105\73\66\85\53\85\80\66\90\50\103\106\119\117\103\86\76\73\97\51\68\74\100\101\77\117\80\78\77\71\43\100\55\103\117\102\119\107\116\82\83\106\106\75\66\66\110\122\87\109\90\72\87\74\89\49\112\106\86\43\122\50\97\66\119\118\88\108\49\82\48\121\49\68\65\56\100\80\70\77\113\122\103\80\111\112\101\111\119\72\113\71\108\100\102\85\120\75\72\74\113\72\81\104\48\69\118\120\66\77\43\99\117\89\49\55\75\98\73\119\108\122\56\75\104\84\106\112\110\53\105\119\116\75\50\56\71\103\76\118\106\70\54\113\99\70\115\52\105\66\112\66\89\79\68\107\113\80\89\53\54\55\66\100\106\72\50\115\88\113\100\47\83\68\104\112\85\47\100\121\121\51\119\112\48\83\116\68\67\104\83\79\99\47\43\73\114\80\113\112\112\52\109\114\65\111\71\121\113\105\52\97\122\69\66\77\65\43\55\57\107\79\72\79\74\49\115\69\108\85\122\105\85\112\54\67\77\85\67\106\81\86\80\104\88\112\111\90\54\98\73\104\79\117\102\88\109\115\103\99\47\79\52\109\51\49\77\68\70\106\118\109\98\56\112\97\111\89\90\53\120\66\69\100\54\105\65\70\80\115\108\70\108\110\97\51\82\86\113\113\112\80\112\71\75\55\73\81\55\66\43\84\112\43\85\120\120\50\98\80\105\54\50\111\88\54\67\104\78\84\48\52\47\73\52\103\80\114\70\107\118\56\109\71\81\57\52\107\76\79\84\66\114\122\97\100\104\72\82\121\77\53\56\109\107\97\65\88\102\89\107\117\104\102\75\81\105\89\98\108\99\73\70\53\70\70\70\121\55\99\56\122\67\90\47\105\53\82\111\66\51\68\66\56\50\73\88\87\72\72\49\88\79\106\113\105\78\118\109\98\120\106\116\48\105\56\82\86\69\122\68\77\120\47\69\88\66\103\55\74\53\82\116\47\80\109\74\118\117\87\67\105\48\100\104\112\82\89\75\115\110\65\113\48\85\79\75\77\108\73\73\77\55\99\83\111\87\118\105\71\57\84\52\55\71\87\84\117\66\86\90\75\107\106\116\49\115\57\73\88\86\80\76\116\81\71\81\87\51\105\111\105\74\84\89\52\110\89\119\99\53\57\101\100\119\122\83\111\106\72\82\89\69\110\73\105\73\53\48\102\74\53\82\56\66\69\65\105\98\80\71\109\43\81\78\122\71\110\66\49\103\87\75\55\79\115\80\74\53\111\119\115\120\97\101\48\75\71\56\120\100\113\75\120\106\107\66\55\101\43\72\82\110\116\122\51\53\116\67\57\56\116\120\81\50\100\104\69\110\98\71\51\73\90\57\56\73\82\72\119\75\109\116\90\118\77\121\75\69\55\65\122\106\47\77\82\66\117\102\105\54\110\122\56\43\66\76\55\88\105\48\67\106\90\122\57\109\89\50\114\109\66\86\121\87\102\52\55\109\56\109\120\72\43\98\89\101\88\65\115\55\90\122\88\50\68\56\53\47\117\109\77\57\74\79\49\122\119\69\77\114\113\122\110\86\121\76\88\54\54\77\113\55\75\71\53\67\112\47\122\68\99\84\107\89\99\120\51\57\75\119\90\121\48\117\87\89\101\120\85\76\113\80\51\74\116\115\104\53\121\55\112\68\80\65\105\97\52\109\84\100\87\116\43\104\71\51\75\72\113\107\69\73\57\68\106\104\77\112\100\54\80\87\48\121\84\116\70\99\57\116\110\115\66\99\70\68\100\101\76\117\122\103\112\85\81\49\52\109\57\75\82\78\82\56\121\104\90\70\121\118\102\76\71\80\81\113\112\119\67\119\84\83\119\79\101\51\47\85\49\116\87\114\110\81\53\110\55\120\49\82\118\107\122\54\81\70\117\83\120\81\48\115\90\74\67\101\78\86\115\75\77\109\105\54\80\117\52\83\105\71\69\70\51\84\81\67\47\106\114\83\90\82\116\113\52\119\68\114\108\86\118\107\102\122\65\56\55\78\110\106\52\71\73\83\49\65\112\111\51\72\86\119\109\101\112\113\121\102\101\102\68\88\89\57\85\47\113\109\81\112\86\102\102\54\99\56\49\65\76\88\102\52\122\121\111\102\113\104\57\101\84\48\87\80\66\121\97\119\76\47\81\115\100\84\88\82\79\122\101\97\79\111\108\73\56\67\115\108\72\68\76\83\80\107\107\120\98\71\104\82\68\65\48\57\98\120\78\79\100\105\99\76\84\97\72\83\78\86\74\75\67\115\109\103\118\53\43\120\119\103\48\103\76\70\50\114\43\106\120\97\49\54\104\121\50\89\72\110\101\65\115\87\109\71\86\57\89\85\112\110\65\70\80\84\122\97\75\74\105\67\79\47\43\115\103\120\82\53\68\80\79\118\52\106\106\118\122\72\76\47\56\97\83\52\98\97\73\115\118\116\78\114\53\85\101\121\54\107\54\69\43\85\73\53\109\97\75\56\112\88\78\99\69\84\80\120\65\90\120\98\67\84\70\98\82\80\108\99\106\114\50\66\119\77\117\85\70\81\76\54\66\113\100\67\51\79\85\115\47\97\115\49\112\119\47\108\74\88\108\105\73\76\74\107\56\119\102\101\82\105\47\101\97\80\105\57\109\122\52\48\101\55\104\78\54\48\98\103\77\97\56\43\54\121\67\105\75\71\113\56\49\109\113\104\118\100\56\51\85\118\80\88\84\68\107\52\110\120\104\48\114\115\57\49\56\71\118\88\117\115\89\68\82\57\122\115\101\53\76\77\80\117\99\83\90\84\100\104\122\47\99\54\65\68\54\72\121\74\99\108\101\97\108\71\100\57\71\50\87\113\122\80\56\120\116\90\116\77\120\72\97\98\54\88\47\122\120\52\103\53\113\114\109\120\68\99\55\102\78\84\51\89\70\66\53\119\86\119\67\98\65\72\70\80\98\85\122\43\89\120\67\90\98\108\53\121\70\71\86\110\83\69\113\47\119\112\74\69\55\107\104\43\69\74\105\57\82\77\76\43\50\101\106\51\84\49\121\114\107\112\77\102\107\70\82\67\81\52\86\75\102\48\56\76\122\116\101\120\70\118\84\66\66\111\90\75\98\66\68\43\111\99\120\55\87\98\75\89\74\97\84\47\81\78\75\84\115\100\119\84\103\116\53\122\97\118\97\70\114\105\70\108\75\50\49\105\47\43\67\122\65\47\85\55\71\116\119\84\106\83\68\55\47\112\121\109\109\121\111\111\121\118\81\51\110\76\43\52\114\70\82\84\69\100\49\68\98\105\121\80\79\74\99\105\90\54\55\70\90\43\118\99\74\110\87\109\55\68\43\85\117\100\99\102\76\112\117\79\82\49\88\86\121\98\107\69\75\75\85\54\105\80\79\99\70\118\105\114\112\111\80\84\114\103\109\47\108\74\108\50\69\43\121\56\110\77\119\119\84\81\70\87\121\103\73\90\70\74\119\43\88\87\49\82\73\53\73\71\47\76\53\74\65\111\53\112\115\121\77\77\102\70\118\100\49\109\70\66\112\88\97\68\102\51\103\89\65\56\71\66\76\79\113\82\52\47\80\51\76\75\75\115\113\48\66\106\97\48\106\73\87\74\74\55\70\103\69\107\85\88\80\113\48\105\97\115\79\121\70\66\103\100\98\101\117\56\120\75\70\108\43\118\49\118\105\67\50\118\109\53\74\112\47\98\78\77\112\43\112\81\88\50\109\111\67\67\71\114\43\103\53\72\74\70\66\72\43\101\88\67\50\56\89\77\100\101\97\69\99\86\97\82\115\78\119\79\67\89\121\55\65\49\73\113\70\107\67\65\85\78\113\51\81\86\55\53\80\99\48\97\68\74\66\74\120\79\88\68\47\87\120\57\67\110\108\68\121\81\71\73\87\102\119\50\49\79\70\76\80\106\70\116\121\121\102\98\120\88\76\69\71\113\99\110\74\88\111\114\55\43\114\108\65\55\73\97\82\99\114\113\116\122\71\52\110\86\107\80\102\114\51\115\99\81\105\78\111\89\119\113\109\87\109\88\56\52\98\85\69\51\85\120\71\76\120\120\115\121\112\53\122\90\77\68\77\52\47\100\57\70\120\43\47\54\101\86\68\105\66\90\108\70\112\106\120\115\90\99\98\109\51\47\43\43\76\108\72\79\79\100\81\52\80\84\69\84\51\80\107\90\53\55\77\83\49\101\53\90\101\100\116\75\98\117\118\78\75\57\115\52\115\43\97\67\76\122\108\53\118\48\69\109\107\71\53\100\90\79\121\49\122\56\81\100\50\89\118\48\54\97\82\114\115\57\81\119\81\98\76\49\55\101\43\52\84\106\89\78\77\78\86\56\116\47\56\65\82\70\76\99\73\50\107\89\104\84\120\78\81\119\110\88\103\80\57\52\70\113\89\102\78\106\70\109\54\115\102\75\72\57\115\66\75\121\120\105\81\75\51\112\116\101\65\98\106\54\109\104\102\66\68\82\70\57\89\71\51\114\88\122\73\50\105\90\53\69\77\108\83\74\81\109\43\53\109\65\68\109\107\69\47\103\53\109\72\103\54\89\99\102\117\56\122\118\78\74\87\116\115\97\82\53\111\108\100\116\69\51\70\53\120\49\69\118\121\103\107\109\43\53\56\106\109\69\84\120\104\43\73\87\50\117\118\85\117\112\101\116\106\117\71\79\49\81\87\77\81\83\88\80\50\81\83\98\105\65\57\114\112\51\110\90\112\54\114\77\121\71\51\79\80\69\88\87\48\56\113\71\115\56\111\50\119\119\83\78\73\85\122\117\72\49\114\55\71\121\51\113\52\65\53\71\113\85\65\122\81\102\48\70\49\81\57\101\49\55\82\84\68\68\112\52\114\99\111\122\119\105\110\115\117\73\77\86\50\51\111\75\50\84\90\78\47\100\78\99\53\90\54\86\53\78\83\122\114\47\78\48\117\118\77\87\111\77\86\107\83\105\107\115\118\50\67\56\103\51\87\87\87\77\100\113\67\115\50\121\106\106\55\102\73\56\77\115\101\77\107\43\69\122\115\70\53\51\69\69\66\103\57\43\82\105\122\72\77\114\53\82\52\115\103\66\65\67\48\106\99\72\104\88\70\73\56\104\121\76\110\79\72\99\53\77\116\101\50\102\72\111\82\47\51\72\118\97\71\43\87\108\83\114\118\98\116\117\111\51\121\70\49\75\103\52\121\68\47\105\99\71\102\75\82\84\122\52\102\83\88\106\67\52\57\73\68\104\112\80\115\85\119\117\86\100\104\117\111\89\43\115\67\97\74\115\43\77\50\55\113\49\54\82\66\77\109\72\99\103\108\80\56\48\112\113\68\49\56\50\84\47\55\87\48\102\97\102\50\120\78\110\85\121\106\101\112\118\84\85\49\97\106\109\53\104\82\84\76\106\79\49\43\81\84\114\99\83\111\51\73\87\72\67\115\53\111\105\108\71\99\78\118\57\120\78\103\48\122\72\122\115\104\80\47\78\108\52\109\75\73\55\102\102\72\119\120\106\81\75\105\82\111\110\77\108\70\72\113\49\74\100\106\122\49\76\122\98\70\97\107\108\72\98\75\112\52\56\100\82\80\47\75\79\77\113\72\68\119\71\110\103\111\104\102\68\57\65\121\66\82\106\103\47\117\49\114\89\120\77\106\79\57\99\97\106\102\103\83\97\43\84\115\104\67\110\117\113\103\87\112\112\48\111\51\53\51\98\77\47\68\49\112\106\107\113\80\57\47\97\82\121\78\84\121\89\104\80\49\43\122\57\70\107\70\73\55\88\85\57\107\49\101\81\73\118\90\99\112\98\52\112\69\109\76\107\112\108\117\97\52\74\57\47\50\50\43\76\69\119\108\107\120\122\49\119\71\97\49\74\80\71\65\54\108\65\117\82\83\80\106\57\74\110\72\114\109\122\87\75\104\117\78\101\115\81\53\67\68\88\101\118\83\82\43\86\67\66\113\72\113\105\90\78\75\54\118\80\50\97\104\88\73\78\49\120\100\90\86\81\83\53\119\43\71\70\54\119\86\75\48\70\120\101\77\112\84\56\74\97\50\88\52\84\83\54\70\119\89\43\56\119\52\113\55\77\105\101\97\97\77\76\101\54\67\113\54\49\114\106\70\82\118\105\87\105\72\104\90\119\74\54\100\121\57\99\53\112\88\90\111\101\98\51\50\77\109\101\72\72\67\103\101\120\66\53\99\56\75\57\55\69\108\121\82\122\102\65\88\66\122\53\122\79\105\83\112\84\104\104\72\118\50\70\75\82\97\116\54\107\71\82\83\79\55\49\77\66\113\77\116\101\71\52\106\99\116\89\57\80\83\72\82\120\114\81\89\84\48\113\85\90\50\82\65\104\67\71\54\98\100\48\117\50\108\105\52\112\90\81\102\82\109\56\116\105\76\75\75\105\75\110\82\89\103\80\117\119\77\70\97\84\88\80\53\99\54\113\114\50\85\109\100\80\54\101\109\49\70\106\106\120\105\115\88\85\54\97\107\115\75\79\81\103\53\117\89\106\53\74\48\109\106\81\80\72\52\47\116\80\71\100\87\101\57\53\111\118\88\110\49\79\69\84\85\113\48\81\87\43\43\57\81\77\69\71\117\120\53\110\51\69\118\101\75\70\111\118\104\50\85\78\68\98\77\108\115\111\112\74\105\114\120\49\109\67\87\51\105\109\81\88\56\120\119\97\66\67\115\104\117\51\97\113\107\121\109\84\65\66\72\67\49\122\102\74\81\49\83\71\71\113\88\111\85\101\119\119\122\52\88\122\66\90\86\100\51\47\108\65\106\118\65\118\98\105\119\72\101\52\77\47\68\89\105\78\82\103\65\122\49\113\51\87\116\81\105\55\107\104\55\117\74\85\72\82\114\87\87\57\111\118\72\106\77\54\54\108\72\99\56\109\112\77\114\98\116\49\65\71\67\53\70\111\53\72\117\104\53\65\90\104\121\74\107\111\53\117\117\90\79\100\65\105\109\114\121\67\74\105\83\115\106\105\54\68\120\77\105\47\117\122\99\81\100\73\102\107\55\117\101\54\86\65\114\118\52\70\115\56\89\69\75\67\70\83\49\102\70\100\112\99\57\75\49\43\80\43\102\88\80\89\101\79\103\99\87\90\88\71\72\111\106\56\66\65\70\78\83\118\50\90\51\66\115\112\104\105\83\51\55\105\118\106\82\65\89\75\83\98\71\87\77\83\51\108\81\88\48\76\98\83\114\75\68\111\121\107\116\107\116\83\88\56\122\81\98\55\75\121\51\75\51\101\108\75\76\109\114\109\119\114\103\47\67\48\54\107\66\57\77\52\111\89\105\83\73\56\65\67\56\66\98\119\69\54\79\120\56\74\76\87\108\105\53\74\105\115\81\68\66\88\97\71\69\101\114\98\43\50\47\121\56\54\84\105\111\68\50\73\86\52\84\55\86\49\122\70\102\47\106\90\110\97\82\83\69\73\75\103\76\54\74\88\100\78\98\51\87\48\104\51\88\53\83\101\102\114\84\72\117\119\47\52\79\83\108\75\113\70\112\69\98\101\57\68\112\77\113\114\81\108\118\107\87\47\50\114\74\43\120\50\81\67\54\52\48\121\114\54\112\51\112\118\82\68\106\68\55\85\86\81\98\98\80\112\113\85\111\90\43\73\81\47\120\47\73\114\89\89\87\85\122\117\55\112\76\115\68\52\99\114\86\80\56\106\102\120\105\105\82\73\79\67\88\88\74\90\67\99\50\73\48\50\122\88\88\55\80\98\80\70\54\74\48\79\120\104\118\84\74\122\69\65\74\70\86\89\106\98\86\79\50\57\112\68\66\71\57\57\55\97\80\119\56\68\51\111\50\116\55\43\75\120\51\87\83\57\119\88\50\43\89\52\88\77\78\85\105\82\70\103\67\87\73\73\104\98\84\69\43\81\113\47\99\89\106\52\98\69\102\73\99\122\87\77\68\122\109\70\84\119\106\84\116\99\47\70\115\48\98\66\71\106\106\97\101\97\67\77\105\105\108\56\70\47\67\50\119\70\120\82\102\76\108\51\78\83\110\68\106\89\69\86\81\53\50\69\109\113\51\116\56\105\51\112\113\80\51\119\109\86\105\72\106\115\68\76\80\83\101\85\81\109\119\67\83\100\76\107\86\104\108\48\53\118\99\114\43\57\101\120\66\71\98\88\109\109\100\77\49\51\79\43\52\69\103\112\67\116\84\73\110\121\118\97\76\116\86\101\65\87\70\83\111\72\97\75\50\89\67\69\72\106\88\115\117\43\50\111\118\79\89\99\73\69\71\119\90\85\72\119\83\70\112\77\98\79\67\77\98\103\107\47\88\116\57\108\52\86\88\47\84\119\108\68\111\72\108\84\53\103\52\105\85\97\86\87\53\86\116\103\102\73\113\102\69\75\67\89\87\79\49\72\51\69\113\121\122\114\101\111\118\82\85\76\115\66\114\116\65\79\55\51\68\48\100\67\111\83\103\103\116\111\102\75\99\66\73\111\100\115\76\86\110\114\80\119\105\115\72\65\68\54\83\97\89\65\106\50\49\87\72\122\72\49\66\68\50\99\87\89\111\115\104\117\103\119\81\48\103\82\116\107\86\88\103\49\48\74\82\112\104\111\86\115\119\53\87\80\90\69\56\69\119\76\49\52\82\84\71\72\111\97\113\48\97\122\75\55\72\88\111\97\104\67\122\48\97\110\47\50\57\98\86\84\113\115\89\76\120\114\105\121\110\118\107\110\82\86\109\107\73\52\102\71\97\50\56\120\50\122\76\70\81\43\53\117\85\100\99\111\53\48\85\75\85\55\67\118\83\113\68\109\89\51\69\48\76\85\69\89\82\109\84\114\52\71\112\113\43\85\68\56\67\86\83\70\77\83\67\69\48\107\53\113\43\84\85\71\86\66\115\86\78\110\77\80\66\107\99\68\71\52\88\85\69\120\47\51\88\105\90\74\99\97\56\47\105\118\67\86\50\70\112\53\67\57\49\106\79\98\53\65\88\83\110\73\83\49\115\103\90\89\71\53\82\53\112\120\113\71\108\120\107\87\48\49\111\99\48\103\55\107\69\115\76\52\49\52\117\116\48\100\79\74\102\121\107\66\77\98\119\54\65\90\97\69\98\108\112\76\122\82\99\75\87\102\114\57\117\78\107\119\83\54\108\78\54\84\51\109\111\52\81\88\79\52\121\77\81\47\48\72\85\113\52\108\99\117\100\80\102\85\76\97\78\111\67\103\88\109\109\113\84\100\90\81\78\109\106\103\87\52\81\116\87\90\55\121\79\116\57\113\86\78\66\56\47\121\98\118\98\120\97\73\51\87\85\79\82\81\76\57\83\87\51\69\65\61\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
