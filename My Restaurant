--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\66\48\43\72\48\120\99\109\47\121\67\104\83\108\108\78\85\86\89\76\51\106\101\66\70\70\87\88\68\84\52\102\79\80\48\118\71\109\110\71\88\85\122\47\87\103\50\109\121\52\102\86\51\82\54\112\84\101\73\53\85\48\47\81\104\57\122\90\97\77\122\43\80\72\72\79\53\99\77\70\111\55\109\119\88\104\43\53\65\47\50\104\69\108\73\79\67\71\51\112\68\80\103\120\76\55\83\78\97\106\111\67\50\43\70\109\74\114\122\70\43\67\79\78\73\80\103\101\84\90\89\75\43\121\71\99\113\49\99\104\112\120\53\122\85\73\76\90\99\122\115\112\119\87\108\71\75\89\121\75\66\89\77\74\111\90\111\113\71\48\109\99\75\77\82\113\99\57\77\71\107\51\87\88\56\108\121\53\120\66\104\97\73\52\119\48\47\117\103\67\77\115\105\55\104\67\85\118\70\99\121\108\57\49\53\103\116\56\99\100\115\120\73\86\70\83\70\74\81\117\120\82\99\119\100\120\56\109\74\110\78\109\79\55\90\117\113\82\108\52\117\98\52\67\120\80\114\120\115\72\97\83\78\65\71\107\119\83\73\77\49\47\99\111\66\117\86\74\51\109\56\117\84\51\83\102\109\108\78\118\110\53\49\85\49\47\110\111\88\79\82\47\43\122\85\102\71\109\48\69\120\52\115\51\106\88\90\48\118\87\98\81\47\115\54\71\87\103\71\110\81\87\105\51\90\79\113\65\80\55\55\114\80\117\121\114\113\114\108\85\103\57\81\48\51\75\89\82\65\80\116\81\115\51\117\109\47\49\110\71\47\104\87\82\70\97\80\69\121\51\111\105\105\117\51\110\99\47\50\88\88\69\71\80\108\51\101\89\118\109\43\107\72\97\87\116\57\111\110\115\116\52\66\120\105\56\104\75\79\48\118\48\86\79\76\69\109\85\115\51\98\120\116\51\110\88\98\51\48\98\50\99\76\52\72\49\106\117\55\70\113\70\98\80\117\106\109\70\88\74\70\57\69\99\109\104\55\120\88\114\115\122\79\107\49\75\76\49\100\115\104\72\101\116\111\84\74\69\103\54\65\97\52\68\102\110\51\81\72\118\79\85\98\111\108\98\48\82\86\47\122\83\106\105\78\65\81\102\103\69\74\72\114\113\90\53\74\109\83\49\43\75\80\109\104\113\84\68\48\99\87\50\117\83\50\110\100\103\54\67\100\56\69\112\107\75\84\90\111\76\98\112\114\82\106\97\48\84\90\113\51\55\53\118\106\74\122\70\116\81\88\53\75\98\97\81\79\116\80\88\90\113\115\69\82\111\67\111\69\78\67\101\73\101\48\78\102\78\116\72\54\48\82\47\97\121\56\65\111\120\47\75\90\70\55\84\74\116\69\48\49\101\85\73\84\65\75\82\54\49\73\85\68\89\117\90\49\115\114\89\107\43\100\109\114\119\75\66\76\67\78\73\105\88\48\52\112\115\85\121\88\43\55\73\99\117\88\122\97\83\68\118\54\54\79\43\73\65\71\111\104\102\116\120\116\122\104\82\107\82\54\66\71\56\68\119\69\70\78\75\55\82\115\89\88\106\110\47\115\122\108\100\50\65\116\53\101\89\109\119\56\113\122\83\110\114\104\119\101\119\49\89\97\69\100\67\115\73\82\48\51\65\84\97\116\49\69\77\65\110\84\108\109\106\80\53\65\53\85\109\76\107\119\112\98\51\80\104\51\74\108\100\116\109\113\113\122\116\85\82\47\84\73\118\65\73\74\55\105\66\76\51\113\66\88\98\71\70\66\69\88\109\105\111\86\114\121\117\57\107\82\120\108\47\72\98\43\119\55\107\115\111\104\106\86\72\101\85\112\72\51\49\55\118\70\114\108\89\55\79\51\90\99\79\47\88\112\86\105\116\101\121\81\120\112\108\52\108\49\83\69\115\43\55\87\53\52\52\107\83\56\117\105\117\85\106\51\98\121\112\110\108\102\97\89\116\67\118\106\68\87\97\114\113\43\89\76\74\66\116\88\56\47\97\84\76\66\67\108\118\71\48\121\87\81\121\55\48\112\87\122\65\109\76\86\122\74\86\116\80\49\99\122\57\74\116\116\57\69\47\113\72\70\108\43\53\69\120\84\71\120\79\52\111\49\100\57\57\49\43\113\90\99\99\110\73\117\65\102\111\101\116\112\121\114\74\47\66\87\68\85\83\56\110\117\89\103\104\119\112\108\82\78\89\52\86\77\107\109\122\101\43\82\50\78\67\67\66\113\112\83\81\49\72\72\97\69\51\117\117\48\119\86\49\90\57\73\89\88\72\53\73\50\56\57\89\70\71\87\51\66\75\112\47\103\55\111\103\66\104\55\115\50\67\57\107\82\85\51\53\72\87\113\56\89\50\70\116\83\76\49\120\74\117\101\98\51\83\71\121\78\72\75\66\50\102\82\90\43\122\83\66\75\113\90\98\88\112\108\81\70\102\72\105\50\85\77\101\83\89\103\81\88\116\118\87\90\90\43\76\102\71\110\77\43\71\98\52\80\88\89\50\115\119\99\115\120\104\74\68\86\111\120\121\77\73\43\98\84\82\83\53\71\118\86\70\83\89\83\119\105\52\84\70\52\76\53\85\50\52\104\55\47\79\89\75\54\122\54\102\108\113\90\103\50\88\48\106\112\65\105\55\56\111\110\50\48\110\66\73\107\50\117\121\103\100\81\121\89\107\43\99\71\99\97\102\107\80\74\97\53\52\70\106\57\98\104\122\77\49\49\118\47\106\100\98\111\111\53\88\74\57\79\110\100\120\113\78\115\104\80\79\90\90\99\100\56\54\98\51\109\104\103\68\78\50\116\113\78\87\83\99\48\74\75\66\68\111\102\119\82\110\122\97\114\106\49\48\100\69\85\102\100\87\116\47\120\82\74\71\57\70\82\54\43\122\111\80\47\55\120\86\85\109\52\111\108\48\106\77\112\114\55\121\104\115\47\107\71\88\70\57\67\115\118\87\98\104\107\48\107\97\65\84\48\71\121\49\57\103\88\78\51\83\67\83\117\51\68\47\72\72\89\113\78\90\56\65\112\103\117\79\98\111\79\69\57\78\49\112\80\121\121\115\113\73\120\98\120\77\56\77\72\122\103\110\84\52\69\50\117\90\111\67\71\52\69\75\113\50\97\71\115\67\49\72\49\118\48\111\48\74\85\79\108\72\54\53\77\100\110\71\80\120\121\68\87\83\55\82\68\113\76\113\88\118\108\104\50\67\69\88\100\89\100\122\49\104\98\106\53\75\100\104\57\67\108\75\89\106\117\50\115\100\80\75\104\113\89\104\65\54\51\87\49\69\101\65\105\106\102\57\80\48\79\120\54\83\114\104\54\76\90\49\84\86\114\115\71\113\102\100\121\114\87\70\116\52\118\103\73\90\83\120\79\97\49\54\53\70\109\122\54\88\70\80\80\43\43\105\75\49\90\75\73\79\103\115\84\81\118\70\86\73\113\70\57\97\74\53\47\79\116\107\109\71\68\112\88\97\66\54\85\47\54\57\52\86\112\103\77\52\105\86\83\74\66\75\90\56\98\86\52\118\68\115\50\83\79\47\69\50\101\101\81\73\122\52\51\66\106\116\81\104\118\70\84\87\57\55\120\121\88\102\49\121\68\70\89\119\82\73\111\74\112\81\66\74\65\114\69\109\84\56\68\118\101\66\105\54\71\108\56\73\107\99\77\119\47\51\118\106\79\84\117\43\112\114\57\67\48\105\90\78\79\74\86\105\81\79\99\90\110\118\87\97\74\86\88\89\97\75\73\78\54\116\104\82\118\51\81\84\75\100\88\109\43\116\57\68\112\71\104\119\106\67\98\118\101\115\103\89\78\121\73\103\86\78\111\119\97\49\109\98\79\57\121\84\73\117\114\90\67\121\108\74\51\122\52\69\117\66\48\119\106\43\51\75\104\54\80\77\109\66\77\50\66\57\115\90\51\43\73\99\78\88\113\75\50\70\116\111\48\102\43\110\105\75\121\52\68\108\43\112\50\97\74\85\83\105\110\106\117\67\104\116\50\90\100\114\65\47\104\69\90\72\69\49\67\68\72\106\101\88\122\56\65\116\99\69\112\120\57\102\69\81\107\81\85\116\116\83\57\79\117\115\117\114\86\54\102\118\54\82\118\122\111\49\78\55\84\89\121\47\90\99\105\100\100\99\103\103\89\105\76\108\120\101\78\73\82\121\80\71\55\109\115\118\112\111\65\108\77\51\110\67\53\108\80\71\103\89\56\109\105\80\103\115\105\80\112\48\121\85\110\115\55\108\87\82\99\67\76\56\43\73\119\88\43\70\85\56\109\53\102\108\68\75\106\51\73\122\49\69\50\66\108\74\74\74\52\88\122\52\57\90\72\90\116\112\57\69\84\50\48\89\90\80\116\73\100\83\57\68\75\109\49\77\49\99\118\107\109\48\116\82\70\67\89\119\106\56\111\50\73\110\79\102\109\122\122\78\103\84\76\81\66\118\110\55\78\66\115\49\114\111\67\65\57\117\82\86\57\49\51\47\57\104\122\43\83\120\68\105\114\100\105\83\90\78\89\120\103\57\50\87\81\111\66\67\76\113\57\74\109\78\121\80\106\83\122\116\75\119\67\90\99\77\78\86\87\112\86\107\119\86\87\53\87\98\103\117\88\104\100\90\99\80\83\87\89\80\43\67\57\108\74\74\52\111\103\54\81\81\72\70\122\115\65\117\52\85\70\82\97\86\66\52\118\98\110\98\76\102\75\69\121\107\47\101\48\85\102\72\106\76\75\105\90\43\102\76\68\105\112\88\99\52\81\88\97\115\47\53\89\99\110\122\82\87\114\68\81\47\103\54\120\115\84\101\80\79\108\70\119\80\106\105\75\83\86\109\68\90\86\120\90\119\47\90\121\47\118\85\57\100\115\87\116\102\57\82\100\97\101\109\78\68\121\47\102\116\108\74\115\51\97\67\52\78\86\88\66\112\50\114\122\47\55\98\102\66\70\56\81\48\120\114\83\99\65\87\54\87\66\54\113\105\53\56\86\109\117\87\122\82\86\122\88\112\117\100\50\51\90\48\76\111\102\47\65\79\81\74\66\50\107\122\65\72\87\57\54\103\122\49\119\90\50\80\86\55\87\73\100\108\109\55\65\86\70\104\73\79\113\71\115\116\68\108\90\81\78\57\113\98\112\43\65\49\79\43\51\99\88\50\56\110\56\106\112\108\110\50\54\82\111\77\108\113\117\54\53\65\111\104\108\75\74\43\114\85\76\101\48\117\88\65\51\80\68\118\109\109\89\65\90\110\47\53\122\85\97\79\109\54\97\101\72\77\100\122\85\51\111\117\90\81\99\114\86\43\72\65\115\83\119\73\56\85\114\99\88\51\48\113\120\106\105\48\114\66\74\66\76\80\65\110\115\82\79\68\97\84\81\70\69\112\97\43\112\79\76\56\114\52\105\86\70\54\85\83\109\47\110\54\49\90\120\89\51\84\110\75\101\120\118\89\49\68\73\121\119\78\66\114\49\70\76\110\81\67\108\83\78\55\83\75\102\122\54\114\85\87\84\104\65\54\69\106\78\121\47\86\84\97\107\84\86\76\103\115\51\112\112\43\104\75\109\78\121\88\82\109\73\105\122\68\100\89\122\78\107\56\110\115\50\99\49\76\111\47\50\107\77\112\113\43\76\78\49\86\90\86\115\112\107\68\117\54\43\87\107\80\65\83\48\120\55\101\86\77\89\117\116\87\87\75\55\119\54\72\72\83\108\105\88\111\90\73\55\77\72\107\54\121\69\80\79\118\98\68\52\103\111\80\72\108\70\87\81\122\79\116\86\113\119\71\101\105\98\106\103\82\118\77\84\51\79\73\99\84\90\106\88\49\72\85\72\47\119\83\87\67\90\121\113\43\80\77\81\87\56\122\47\119\70\70\74\77\54\84\105\121\81\103\111\122\83\102\97\97\105\118\102\86\98\56\119\90\117\71\73\111\51\100\43\118\51\110\78\121\98\106\73\113\73\53\73\74\99\99\114\75\112\50\71\78\56\49\120\103\55\102\105\120\108\85\66\99\65\98\79\112\76\74\103\90\118\117\116\108\102\53\70\54\106\106\47\56\100\88\81\83\48\115\108\97\53\101\76\98\71\50\116\88\113\107\47\84\78\107\71\77\104\118\49\70\72\117\70\73\75\56\88\68\108\89\105\51\69\72\118\65\43\83\74\110\70\67\106\112\67\122\105\53\86\112\99\75\66\120\119\117\82\69\107\100\102\56\80\118\85\65\43\97\65\65\97\120\49\88\88\116\73\54\122\113\78\98\115\79\122\103\113\112\79\113\72\106\122\107\109\113\82\47\66\68\105\87\70\105\100\117\85\71\53\89\104\102\56\49\107\122\83\105\47\121\54\55\77\78\73\77\71\121\69\81\43\76\66\88\100\108\121\113\119\66\73\121\47\110\121\116\85\89\57\55\75\109\79\120\72\80\70\78\78\110\120\119\81\101\121\111\81\73\81\82\74\71\104\122\73\122\86\97\65\104\104\49\56\100\101\120\43\48\72\51\70\49\85\80\88\52\90\49\102\57\86\83\100\51\56\67\87\118\112\111\49\68\75\87\98\51\98\79\108\119\115\97\76\113\108\78\79\101\83\66\118\98\70\75\117\111\87\69\100\107\103\113\71\80\73\102\67\111\82\81\110\103\103\90\89\89\55\78\121\70\80\118\114\80\70\80\117\108\85\88\107\55\86\77\97\54\108\104\74\50\120\87\90\55\57\72\89\55\118\66\56\116\74\49\107\108\65\78\109\66\84\82\76\107\43\104\101\78\73\106\81\117\113\54\75\48\65\106\51\86\101\118\50\87\49\56\107\52\51\111\67\104\71\53\67\68\51\43\83\56\54\98\120\121\113\98\87\98\115\110\117\116\47\120\100\73\112\54\90\53\70\52\103\55\65\84\69\82\55\71\48\84\112\48\110\49\100\114\65\102\119\97\51\80\120\98\65\122\89\57\85\55\88\113\47\119\52\83\55\73\90\116\85\54\83\56\114\106\72\67\114\53\56\74\84\105\74\118\52\78\69\107\106\99\43\117\85\69\80\83\57\89\74\115\110\84\79\103\106\77\107\118\99\76\57\119\99\84\113\70\55\48\121\75\119\110\109\69\81\105\70\122\68\104\97\86\107\71\105\116\112\76\109\101\112\114\121\78\71\110\66\48\74\108\79\104\52\55\77\68\73\81\119\120\57\69\67\113\84\88\110\115\85\81\111\101\73\106\104\56\116\107\100\97\88\90\69\55\106\120\105\102\89\117\55\76\53\99\77\106\88\51\73\86\71\80\88\110\89\74\116\108\87\86\98\65\74\103\116\122\120\109\118\77\55\85\111\81\78\65\115\106\110\117\66\101\50\99\108\82\56\70\99\98\86\50\53\85\68\90\71\49\89\111\49\53\53\112\48\111\74\85\74\108\120\52\104\76\100\52\80\110\83\68\75\71\81\69\105\68\102\78\70\109\67\104\85\105\49\71\110\89\67\65\82\114\106\78\50\47\53\113\112\50\72\52\77\89\50\53\75\84\103\69\50\57\119\67\105\90\52\107\55\57\66\103\77\67\73\53\87\97\114\86\88\68\78\81\109\56\107\77\74\76\88\121\113\107\112\67\98\81\69\53\53\109\82\83\67\47\117\82\118\80\109\43\84\120\72\77\121\104\122\101\108\79\70\113\80\102\117\67\69\89\76\78\97\52\72\50\108\98\73\114\90\85\112\85\122\111\70\73\85\47\43\53\47\105\50\121\83\89\105\84\55\104\72\100\89\57\71\85\70\100\108\117\66\53\104\77\115\82\57\87\80\104\74\50\115\74\89\90\112\47\66\71\103\100\52\84\116\107\90\54\104\87\78\72\49\83\89\72\112\108\113\52\77\78\118\43\83\47\88\107\49\43\68\83\68\50\76\113\85\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
